powerTransform(g, family="bcPower") #"bcPower", "bcnPower", "yjPower"
g2 <- bcPower(U = g, lambda = 0.2827951)
par(mfrow = c(1,2))
densityPlot(g, main = 'Original')
densityPlot(g2, main = 'Transformada')
p1 <- powerTransform(cycles ~ len + amp + load, Wool,
family = "bcPower")
par(mfrow = c(1,2))
densityPlot(Wool$cycles)
densityPlot(bcPower(U = Wool$cycles, lambda = -0.05915814))
p1 <- powerTransform(cycles ~ len + amp + load, Wool,
family = "bcPower")
par(mfrow = c(1,2))
densityPlot(Wool$cycles, main = 'Original')
densityPlot(bcPower(U = Wool$cycles, lambda = -0.05915814), main = 'Transformada')
with(UN, invTranPlot(ppgdp, infantMortality))
with(UN, invTranEstimate(ppgdp, infantMortality))
r <- rbeta(100, 0.7, 5)
symbox(~r)
densityPlot(r)
densityPlot(r^0.5)
x <- rgamma(100,1,1)
y <- rpois(100, 4)
z <- rnorm(100, 5)
boxCox(x~y+z)
bc <- boxCox(x~y+z)
bc <- data.frame(lambda = bc$x,
loglik = bc$y)
t <- subset(bc, bc$loglik == max(bc$loglik))
densityPlot(x)
densityPlot(x^as.numeric(t[1]))
knitr::opts_chunk$set(echo = TRUE, cache = TRUE,fig.align='center',
fig.height = 5)
x <- rgamma(100,1,1)
y <- rpois(100, 4)
z <- rnorm(100, 5)
boxCox(x~y+z)
bc <- boxCox(x~y+z)
bc <- data.frame(lambda = bc$x,
loglik = bc$y)
t <- subset(bc, bc$loglik == max(bc$loglik))
densityPlot(x)
densityPlot(x^as.numeric(t[1]))
boxTidwell(prestige ~ income + education,
~ type + poly(women, 2),
data=Prestige)
with(UN, invTranPlot(ppgdp, infantMortality))
with(UN, invTranEstimate(ppgdp, infantMortality))
ls("package:mcglm")
library(mcglm)
ls("package:mcglm")
bcPower  #box cox tradicional, valores nÃ£o negativos
x <- rnorm(10, 5,1)
x_bc <- bcPower(U = x, lambda = 2)
lambda = 2
x_bc == (x^(lambda)-1)/lambda
x_log <- bcPower(U = x, lambda = 0)
x_log == log(x)
bcnPower #negativos permitidos
y <- rnorm(10,10,20)
bcn <- bcnPower(U = y, lambda = 1, gamma = 1)
gamma = 1
bcn2 <- bcPower(0.5*(y + sqrt(y^2 + gamma^2)), lambda = 1)
bcn == bcn2
w <- rnorm(10,10,3)
bcn <- bcnPower(U = w, lambda = 1, gamma = 1)
gamma = 1
bcn2 <- bcPower(0.5*(w + sqrt(w^2 + gamma^2)), lambda = 1)
bcn == bcn2
yjPower()
yjPower(x, lambda = 2) == bcPower(x+1, lambda = 2)
basicPower
basicPower(x, lambda = 2) == x^2
basicPower(x, lambda = 0) == log(x)
g <- rgamma(100, 1,3)
densityPlot(g)
powerTransform(g, family="bcPower")
g2 <- bcPower(U = g, lambda = 0.2827951)
densityPlot(g2)
p1 <- powerTransform(cycles ~ len + amp + load, Wool,
family = "bcPower")
densityPlot(Wool$cycles)
densityPlot(bcPower(U = Wool$cycles, lambda = -0.05915814))
r <- rbeta(100, 0.7, 5)
symbox(~r)
densityPlot(r)
densityPlot(r^0.5)
x <- rgamma(100,1,1)
y <- rpois(100, 4)
z <- rnorm(100, 5)
boxCox(x~y+z)
bc <- boxCox(x~y+z)
bc <- data.frame(lambda = bc$x,
loglik = bc$y)
t <- subset(bc, bc$loglik == max(bc$loglik))
densityPlot(x)
densityPlot(x^as.numeric(t[1]))
with(UN, plot(log(ppgdp, 10), log(infantMortality, 10)))
basicPowerAxis(0, base=10, side="above",
at=c(50, 200, 500, 2000, 5000, 20000), grid=TRUE,
axis.title="GDP per capita")
basicPowerAxis(0, base=10, side="right",
at=c(5, 10, 20, 50, 100), grid=TRUE,
axis.title="infant mortality rate per 1000")
with(UN, plot(bcPower(ppgdp, 0), bcPower(infantMortality, 0)))
bcPowerAxis(0, side="above",
grid=TRUE, axis.title="GDP per capita")
bcPowerAxis(0, side="right",
grid=TRUE, axis.title="infant mortality rate per 1000")
boxTidwell(prestige ~ income + education,
~ type + poly(women, 2),
data=Prestige)
with(UN, invTranPlot(ppgdp, infantMortality))
with(UN, invTranEstimate(ppgdp, infantMortality))
b <- rbeta(10,1,2)
round(logit(b),4) == round(log(b/(1 - b)),4)
x <- rgamma(100,1,1)
y <- rpois(100, 4)
z <- rnorm(100, 5)
t <- powerTransform(x ~ y+z)
testTransform(t, c(0))
a <- powerTransform(cbind(len, adt, trks, sigs1) ~ htype, Highway1)
testTransform(a, c(0, 0, 0, -1))
q <- powerTransform(lm(cbind(LoBD$I1L2, LoBD$I1L1) ~ pool, LoBD), family="bcnPower")
testTransform(q, c(.3, .8))
nrow(ls("package:mcglm"))
lenght(ls("package:mcglm"))
length(ls("package:mcglm"))
library(gamlss)
length(ls("package:gamlss"))
?Anova
mod <- lm(conformity ~ fcategory*partner.status, data=Moore,
contrasts=list(fcategory=contr.sum, partner.status=contr.sum))
mod <- lm(conformity ~ fcategory*partner.status, data=Moore,
contrasts=list(fcategory=contr.sum, partner.status=contr.sum))
mod
Anova(mod)
Moore
conformity ~ fcategory*partner.status, data=Moore
Anova(mod, type=3)  # note use of contr.sum in call to lm()
Pottery
lm(cbind(Al, Fe, Mg, Ca, Na) ~ Site, data=Pottery)
Anova(lm(cbind(Al, Fe, Mg, Ca, Na) ~ Site, data=Pottery))
Soils
Soils
soils.mod <- lm(cbind(pH,N,Dens,P,Ca,Mg,K,Na,Conduc) ~ Block + Contour*Depth,
data=Soils)
Manova(soils.mod)
prestige
lm(prestige ~ education + log2(income) + type, data = na.ommit(Prestige))
lm(prestige ~ education + log2(income) + type, data = na.omit(Prestige))
m <- lm(prestige ~ education + log2(income) + type,
data = na.omit(Prestige))
summary(Prestige)
m <- lm(prestige ~ education + log2(income) + type,
data = na.omit(Prestige))
summary(Prestige)
##Anova Tables for Various Statistical Models
library(car)
summary(Prestige)
m <- lm(prestige ~ education + log2(income) + type,
data = na.omit(Prestige))
density(m$residuals)
plot(density(m$residuals))
par(mfrow = c(2,2))
plot(m)
plot(m, 1:4)
anova(m)
anova(m)
anova(m)
Anova(m)
summary(m)
anova(m)
Anova(m)
predict(m)
plot(predict(m))
plot(predict(m))
plot(predict(m)~ Prestige$prestige)
plot(predict(m)~ na.omit(Prestige$prestige))
predict(m)
na.omit(Prestige$prestige)
as.numeric(predict(m))
as.numeric(predict(m))
plot(as.numeric(predict(m))~ na.omit(Prestige$prestige))
na.omit(Prestige$prestige))
na.omit(Prestige$prestige)
as.numeric(predict(m))
plot(as.numeric(predict(m)))
plot(na.omit(Prestige$prestige))
loess(predict(m))
dados <- data.frame(resp = rnorm(1000),
fat1 = letters[1:5],
fat2 = letters[6:10])
dados
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6)+
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('')
library(ggplot2)
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6)+
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('') +
geom_abline(slope = 0, intercept = 1)
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('') +
geom_segment(1,1,1,1)
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('') +
geom_segment(
+
stat_summary(fun.y = median, geom = 'line', aes(group = Day, colour =Day))
)
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=mean,
geom="line",
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=mean,
geom="line",
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=mean,
geom=c("point", "line"),
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=mean,
geom=c("point", "line"),
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
stat_summary(fun.y = median,
geom = 'line')+
xlab('') + ylab('Estatura') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
stat_summary(fun.y = median,
geom = 'line',
aes(group = fat1, colour =fat1)))
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
stat_summary(fun.y = median,
geom = 'line',
aes(group = fat1, colour =fat1))
dados <- data.frame(resp = rnorm(1000),
fat1 = letters[1:5],
fat2 = letters[6:10])
library(ggplot2)
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
stat_summary(
fun.y = median,
geom = 'line',
position = position_dodge(width = 0.9) #this has to be added
)+
xlab('') + ylab('') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
#  stat_summary(fun.y=median,
#               geom=c("point"),
#               shape=20,
#               size=3,
#               color="red",
#               fill="red")+
stat_summary(
fun.y = median,
geom = 'line',
position = position_dodge(width = 0.9) #this has to be added
)+
xlab('') + ylab('') + ggtitle('')
stat_summary(
fun.y = median,
geom = 'line',
aes(group = fat1, colour = fat1),
position = position_dodge(width = 0.9) #this has to be added
)
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(
fun.y = median,
geom = 'line',
aes(group = fat1, colour = fat1),
position = position_dodge(width = 0.9) #this has to be added
)+
xlab('') + ylab('') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('') + ggtitle('')
g1 <- ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('') + ggtitle('')
g2 <- ggplot(data = dados, mapping = aes(x=fat2, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('') + ggtitle('')
library(ggplot2)
library(ggpubr)
dados <- data.frame(resp = rnorm(1000),
fat1 = letters[1:5],
fat2 = letters[6:10])
g1 <- ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('') + ggtitle('')
g2 <- ggplot(data = dados, mapping = aes(x=fat2, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('') + ggtitle('')
ggarrange(g1, g2,
nrow = 1, ncol = 2)
library(ggplot2)
library(ggpubr)
dados <- data.frame(resp = rnorm(1000),
fat1 = letters[1:5],
fat2 = letters[6:10])
g1 <- ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('') + ggtitle('')
g2 <- ggplot(data = dados, mapping = aes(x=fat2, y=resp, color=fat2)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('') + ggtitle('')
ggarrange(g1, g2,
nrow = 1,
ncol = 2)
ggetwd()
getwd()
setwd("~/Ãrea de Trabalho/msc_page")
rmarkdown::render_site()
rmarkdown::render_site()
setwd("~/msc_page")
rmarkdown::render_site()
getwd()
rmarkdown::render_site()
